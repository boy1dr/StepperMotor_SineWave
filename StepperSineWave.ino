/*
Direct connect Arduino nano to bipolar stepper motor.
For high current use a H-Bridge !
*/

//motor connection pins
int a = 3;
int b = 5;
int c = 9;
int d = 10;

// fix wiring to stepper (i got it wrong in hardware).
int motorPattern[] = {c,a,d,b};      

/*
pre-calculated sine values. 
512 values range 0.00-254.00.
sinePatternB is 90 degress out of phase (quadrature).
*/
int sinePattern[]  = {127.00,128.56,130.12,131.69,133.25,134.81,136.36,137.92,139.48,141.03,142.58,144.13,145.68,147.22,148.76,150.30,151.83,153.36,154.89,156.41,157.93,159.44,160.95,162.45,163.95,165.44,166.93,168.41,169.88,171.35,172.81,174.26,175.71,177.15,178.58,180.00,181.42,182.82,184.22,185.61,186.99,188.37,189.73,191.08,192.43,193.76,195.08,196.40,197.70,198.99,200.27,201.54,202.80,204.05,205.29,206.51,207.72,208.92,210.11,211.28,212.45,213.60,214.73,215.85,216.96,218.06,219.14,220.21,221.26,222.30,223.33,224.34,225.34,226.32,227.28,228.23,229.17,230.09,230.99,231.88,232.76,233.61,234.45,235.28,236.09,236.88,237.65,238.41,239.15,239.88,240.58,241.27,241.95,242.60,243.24,243.86,244.46,245.05,245.62,246.16,246.70,247.21,247.70,248.18,248.64,249.08,249.50,249.90,250.29,250.65,251.00,251.33,251.64,251.93,252.20,252.45,252.69,252.90,253.10,253.27,253.43,253.57,253.69,253.79,253.87,253.93,253.97,254.00,254.00,253.98,253.95,253.90,253.82,253.73,253.62,253.49,253.34,253.17,252.98,252.78,252.55,252.31,252.04,251.76,251.46,251.14,250.80,250.44,250.06,249.67,249.26,248.82,248.37,247.90,247.42,246.91,246.39,245.85,245.29,244.71,244.11,243.50,242.87,242.22,241.55,240.87,240.17,239.45,238.72,237.97,237.20,236.42,235.61,234.80,233.96,233.11,232.25,231.36,230.47,229.55,228.62,227.68,226.72,225.74,224.75,223.75,222.73,221.70,220.65,219.59,218.51,217.42,216.32,215.20,214.07,212.92,211.77,210.60,209.42,208.22,207.01,205.79,204.56,203.32,202.07,200.80,199.52,198.24,196.94,195.63,194.31,192.98,191.64,190.29,188.93,187.56,186.19,184.80,183.40,182.00,180.59,179.17,177.74,176.30,174.86,173.41,171.95,170.49,169.02,167.54,166.06,164.57,163.07,161.57,160.07,158.55,157.04,155.52,153.99,152.47,150.93,149.40,147.86,146.32,144.77,143.22,141.67,140.12,138.57,137.01,135.45,133.89,132.33,130.77,129.21,127.65,126.08,124.52,122.96,121.40,119.84,118.28,116.72,115.17,113.61,112.06,110.51,108.96,107.42,105.88,104.34,102.80,101.27,99.74,98.22,96.70,95.19,93.68,92.17,90.67,89.18,87.69,86.21,84.73,83.26,81.80,80.34,78.89,77.45,76.01,74.59,73.17,71.76,70.36,68.96,67.58,66.20,64.83,63.48,62.13,60.79,59.46,58.15,56.84,55.54,54.26,52.98,51.72,50.46,49.22,47.99,46.78,45.57,44.38,43.20,42.03,40.88,39.74,38.61,37.49,36.39,35.30,34.23,33.17,32.13,31.09,30.08,29.08,28.09,27.12,26.16,25.22,24.29,23.38,22.48,21.60,20.74,19.89,19.06,18.25,17.45,16.67,15.90,15.15,14.42,13.71,13.01,12.33,11.67,11.02,10.39,9.78,9.19,8.62,8.06,7.52,7.00,6.50,6.01,5.55,5.10,4.67,4.26,3.87,3.50,3.14,2.81,2.49,2.19,1.91,1.65,1.41,1.19,0.98,0.80,0.63,0.49,0.36,0.25,0.16,0.09,0.04,0.01,0.00,0.01,0.03,0.08,0.14,0.23,0.33,0.45,0.60,0.76,0.94,1.14,1.35,1.59,1.85,2.12,2.41,2.73,3.06,3.41,3.78,4.16,4.57,5.00,5.44,5.90,6.38,6.88,7.39,7.93,8.48,9.05,9.64,10.24,10.87,11.51,12.17,12.84,13.54,14.25,14.97,15.72,16.48,17.26,18.05,18.86,19.69,20.53,21.39,22.27,23.16,24.07,24.99,25.93,26.88,27.85,28.83,29.83,30.85,31.87,32.92,33.97,35.04,36.13,37.23,38.34,39.46,40.60,41.75,42.92,44.09,45.28,46.48,47.70,48.93,50.16,51.41,52.67,53.95,55.23,56.52,57.83,59.14,60.47,61.80,63.15,64.50,65.87,67.24,68.63,70.02,71.42,72.83,74.24,75.67,77.10,78.54,79.99,81.44,82.91,84.37,85.85,87.33,88.82,90.31,91.81,93.31,94.82,96.33,97.85,99.37,100.90,102.43,103.97,105.50,107.04,108.59,110.14,111.68,113.24,114.79,116.35,117.90,119.46,121.02,122.58,124.14,125.71,127.27};
int sinePatternB[] = {254.00,253.99,253.96,253.91,253.85,253.76,253.65,253.53,253.39,253.22,253.04,252.84,252.62,252.38,252.12,251.84,251.55,251.23,250.90,250.55,250.18,249.79,249.38,248.95,248.51,248.04,247.56,247.06,246.54,246.01,245.45,244.88,244.29,243.68,243.06,242.41,241.75,241.07,240.38,239.67,238.94,238.19,237.43,236.65,235.85,235.04,234.21,233.36,232.50,231.62,230.73,229.82,228.90,227.96,227.00,226.03,225.05,224.04,223.03,222.00,220.96,219.90,218.83,217.74,216.64,215.53,214.40,213.26,212.11,210.94,209.76,208.57,207.37,206.15,204.93,203.69,202.44,201.17,199.90,198.61,197.32,196.01,194.70,193.37,192.03,190.69,189.33,187.96,186.59,185.21,183.81,182.41,181.00,179.58,178.16,176.72,175.28,173.84,172.38,170.92,169.45,167.97,166.49,165.00,163.51,162.01,160.51,159.00,157.48,155.97,154.44,152.91,151.38,149.85,148.31,146.77,145.22,143.68,142.13,140.58,139.02,137.47,135.91,134.35,132.79,131.23,129.67,128.10,126.54,124.98,123.42,121.86,120.30,118.74,117.18,115.62,114.07,112.52,110.96,109.42,107.87,106.33,104.79,103.25,101.72,100.19,98.67,97.14,95.63,94.12,92.61,91.11,89.61,88.12,86.64,85.16,83.69,82.23,80.77,79.32,77.87,76.43,75.01,73.58,72.17,70.77,69.37,67.98,66.60,65.23,63.87,62.52,61.18,59.85,58.53,57.22,55.92,54.63,53.35,52.09,50.83,49.59,48.35,47.13,45.92,44.73,43.54,42.37,41.22,40.07,38.94,37.82,36.71,35.62,34.54,33.48,32.43,31.39,30.37,29.37,28.38,27.40,26.44,25.49,24.56,23.64,22.74,21.86,20.99,20.14,19.30,18.48,17.68,16.89,16.12,15.37,14.63,13.91,13.21,12.53,11.86,11.21,10.58,9.96,9.36,8.78,8.22,7.68,7.15,6.64,6.15,5.68,5.23,4.80,4.38,3.98,3.60,3.24,2.90,2.58,2.28,1.99,1.72,1.48,1.25,1.04,0.85,0.68,0.53,0.40,0.28,0.19,0.11,0.06,0.02,0.00,0.00,0.02,0.06,0.12,0.20,0.30,0.42,0.55,0.71,0.88,1.08,1.29,1.52,1.77,2.04,2.33,2.63,2.96,3.30,3.67,4.05,4.45,4.87,5.31,5.76,6.24,6.73,7.24,7.77,8.32,8.88,9.46,10.07,10.68,11.32,11.97,12.64,13.33,14.04,14.76,15.50,16.26,17.03,17.82,18.62,19.45,20.29,21.14,22.01,22.90,23.80,24.72,25.65,26.60,27.57,28.54,29.54,30.55,31.57,32.61,33.66,34.73,35.81,36.90,38.01,39.13,40.27,41.41,42.57,43.75,44.93,46.13,47.34,48.56,49.80,51.05,52.30,53.57,54.85,56.14,57.44,58.76,60.08,61.41,62.75,64.11,65.47,66.84,68.22,69.61,71.01,72.41,73.83,75.25,76.68,78.12,79.56,81.02,82.48,83.94,85.42,86.89,88.38,89.87,91.37,92.87,94.38,95.89,97.41,98.93,100.45,101.98,103.52,105.05,106.59,108.14,109.68,111.23,112.78,114.34,115.89,117.45,119.01,120.57,122.13,123.69,125.25,126.81,128.37,129.93,131.50,133.06,134.62,136.18,137.73,139.29,140.84,142.39,143.94,145.49,147.03,148.58,150.11,151.65,153.18,154.70,156.23,157.74,159.26,160.77,162.27,163.77,165.26,166.75,168.23,169.70,171.17,172.63,174.08,175.53,176.97,178.40,179.83,181.24,182.65,184.05,185.44,186.83,188.20,189.56,190.92,192.26,193.60,194.92,196.24,197.54,198.84,200.12,201.39,202.65,203.90,205.14,206.36,207.58,208.78,209.97,211.14,212.31,213.46,214.60,215.72,216.83,217.93,219.01,220.08,221.14,222.18,223.21,224.22,225.22,226.20,227.17,228.12,229.06,229.98,230.88,231.78,232.65,233.51,234.35,235.18,235.99,236.78,237.56,238.32,239.06,239.79,240.50,241.19,241.87,242.52,243.16,243.79,244.39,244.98,245.55,246.10,246.63,247.15,247.65,248.12,248.58,249.03,249.45,249.86,250.24,250.61,250.96,251.29,251.60,251.89,252.17,252.42,252.66,252.88,253.07,253.25,253.41,253.55,253.67,253.78,253.86,253.92,253.97,253.99,254.00};


//array pointer
int ptr_1 = 0;

void setup(){
  delay(1000);
  
  //setup motor pins as outputs
  pinMode(motorPattern[0], OUTPUT);
  pinMode(motorPattern[1], OUTPUT);
  pinMode(motorPattern[2], OUTPUT);
  pinMode(motorPattern[3], OUTPUT);
 
  //set motor initial conditions
  analogWrite( motorPattern[0], sinePattern[ptr_1]);
  analogWrite( motorPattern[3], sinePatternB[ptr_1]);
  analogWrite( motorPattern[1], 127);  //center point
  analogWrite( motorPattern[2], 127);  //center point
  
  delay(1000);
  
}

void loop(){
   ptr_1 = ptr_1 + 4;	//step through the array, 
   if( ptr_1>511 ){ ptr_1=0; }
    
    analogWrite( motorPattern[0], sinePattern[ptr_1]);
    analogWrite( motorPattern[3], sinePatternB[ptr_1]);
    delay(10);         
}
